require 'capistrano'

namespace :load do
  task :defaults do
    set :templates_path, "config/deploy/templates" 

    set :nginx_server_name, -> { "www.example.com" }
    set :nginx_use_ssl, false 
    set :nginx_ssl_certificate, -> { "#{fetch(:nginx_server_name)}.crt" }
    set :nginx_ssl_certificate_key, -> { "#{fetch(:nginx_server_name)}.key" }
    set :nginx_upload_local_certificate, -> { true }
    set :nginx_ssl_certificate_local_path, -> { "/etc/certificates/" }
    set :nginx_ssl_certificate_key_local_path, -> { "/etc/certificates/keys" }

    set :unicorn_pid, -> { "#{current_path}/tmp/pids/unicorn.pid" }
    set :unicorn_config, -> { "#{shared_path}/config/unicorn.rb" }
    set :unicorn_log, -> { "#{shared_path}/log/unicorn.log" }
    set :unicorn_user, -> { fetch(:user) }
    set :unicorn_workers, 4
  end
end


namespace :unicorn do
  desc "Setup Unicorn initializer and app configuration"
  task :setup do
    on roles(:app) do
      execute "mkdir -p #{shared_path}/config"
      execute "mkdir -p #{shared_path}/tmp/pids"
      template "unicorn.rb.erb", fetch(:unicorn_config)
      template "unicorn_init.erb", "/tmp/unicorn_init"
      execute "chmod +x /tmp/unicorn_init"
      execute "sudo mv /tmp/unicorn_init #{fetch(:unicorn_script)}"
    end
  end

  # after "deploy:setup", "unicorn:setup"

end

namespace :deploy do
  %w[start stop restart].each do |command|
    desc "#{command} unicorn"
    task command do
      on roles(:app) do
        execute "#{fetch(:unicorn_script)} #{command}"
      end
    end
  end
  after :publishing, "deploy:restart"
end

def template(template_name, target)
  config_file = "#{fetch(:templates_path)}/#{template_name}"
  # if no customized file, proceed with default
  # unless File.exists?(config_file)
  #   config_file = File.join(File.dirname(__FILE__), "../../generators/capistrano3/nginx_unicorn/templates/#{template_name}")
  # end
  upload! StringIO.new(ERB.new(File.read(config_file)).result(binding)), target
end